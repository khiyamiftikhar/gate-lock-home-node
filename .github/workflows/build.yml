name: ESP-IDF CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [esp32, esp32c3]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache ESP-IDF tools
      - name: Cache ESP-IDF tools
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/esp-idf
          key: esp-idf-${{ hashFiles('**/CMakeLists.txt') }}-${{ github.ref }}
          restore-keys: |
            esp-idf-

      # Cache build output
      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: build_${{ matrix.target }}
          key: build-${{ matrix.target }}-${{ hashFiles('main/**/*.c', 'main/**/*.h', 'components/**', 'CMakeLists.txt', 'sdkconfig.${{ matrix.target }}') }}
          restore-keys: |
            build-${{ matrix.target }}-

      # Build project using official esp-idf-ci-action
      - name: Build ${{ matrix.target }}
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.4.2
          target: ${{ matrix.target }}
          path: .  # your project root
          command: idf.py -B build_${{ matrix.target }} -DIDF_TARGET=${{ matrix.target }} -DSDKCONFIG=sdkconfig.${{ matrix.target }} -D SDKCONFIG_DEFAULTS=sdkconfig.defaults build

      # Archive firmware
      - name: Archive firmware
        run: |
          mkdir -p firmware_${{ matrix.target }}
          cp build_${{ matrix.target }}/*.bin firmware_${{ matrix.target }}/
          cp build_${{ matrix.target }}/*.elf firmware_${{ matrix.target }}/
          cp build_${{ matrix.target }}/partition_table/partition-table.bin firmware_${{ matrix.target }}/
          cp build_${{ matrix.target }}/bootloader/bootloader.bin firmware_${{ matrix.target }}/
          cp build_${{ matrix.target }}/flash_args firmware_${{ matrix.target }}/ 2>/dev/null || echo "flash_args not found, skipping"
          cp build_${{ matrix.target }}/flasher_args.json firmware_${{ matrix.target }}/ 2>/dev/null || echo "flasher_args.json not found, skipping"
          cp build_${{ matrix.target }}/project_description.json firmware_${{ matrix.target }}/ 2>/dev/null || echo "project_description.json not found, skipping"
          cat > firmware_${{ matrix.target }}/flash_info.txt << EOF
          target=${{ matrix.target }}
          idf_version=v5.4.2
          build_time=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          commit_sha=${{ github.sha }}
          workflow_run=${{ github.run_number }}
          EOF

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-firmware
          path: firmware_${{ matrix.target }}/
          retention-days: 7
